openapi: "3.0.0"
info:
  title: Chaos API
  version: 1.0.0
servers:
  - url: https://chaos.csesoc.app/api
    description: Production server
  - url: http://localhost:3000/api
    description: Local server

paths:
  /auth/logout:
    post:
      operationId: logout
      description: Invalidates current token.
      tags:
        - Auth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: string
                    example: Successfully logged out.
  /user:
    get:
      operationId: getLoggedInUser
      description: Returns info about currently logged in user.
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 1541815603606036480
                  email:
                    type: string
                    example: me@example.com
                  zid:
                    type: string
                    example: z5555555
                  name:
                    type: string
                    example: Clancy Lion
                  degree_name:
                    type: string
                    example: Computer Science
                  degree_starting_year:
                    type: integer
                    example: 2024
                  role:
                    type: string
                    example: User
        '401':
          description: Not logged in.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Not logged in.
    delete:
      operationId: deleteUserById
      description: Deletes currently logged in user.
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Successfully deleted user.
        '403':
          description: User is only admin of an organisation.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: "Cannot delete sole admin of an organisation."
        '401':
          description: Not logged.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Not logged in.
  /user/{id}:
    get:
      operationId: getUserById
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
      description: Returns info about specified user.
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 1541815603606036480
                  email:
                    type: string
                    example: me@example.com
                  zid:
                    type: string
                    example: z5555555
                  name:
                    type: string
                    example: Clancy Lion
                  pronouns:
                    type: string
                    example: They/Them
                  gender:
                    type: string
                    example: Male
                  degree_name:
                    type: string
                    example: Computer Science
                  degree_starting_year:
                    type: integer
                    example: 2024
        '403':
          description: Requested user has not applied to one of authorized user's campaign.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: "Insufficient permissions"
  /user/name:
    patch:
      operationId: updateUserName
      description: Updates currently logged in user's name.
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  example: "Clancy Tiger"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Successfully updated name.
        '401':
          description: Not logged in.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Not logged in.

  /user/pronouns:
    patch:
      operationId: updateUserPronouns
      description: Updates currently logged in user's pronouns.
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                zid:
                  type: string
                  example: "z5123456"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Successfully updated pronouns.
        '401':
          description: Not logged in.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Not logged in.
  /user/gender:
    patch:
      operationId: updateUserGender
      description: Updates currently logged in user's gender.
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                zid:
                  type: string
                  example: "z5123456"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Successfully updated gender.
        '401':
          description: Not logged in.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Not logged in.
  /user/zid:
    patch:
      operationId: updateUserZid
      description: Updates currently logged in user's zID.
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                zid:
                  type: string
                  example: "z5123456"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Successfully updated zID.
        '401':
          description: Not logged in.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Not logged in.
  /user/degree:
    patch:
      operationId: updateUserDegree
      description: Updates currently logged in user's degree.
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                degree_name:
                  type: string
                  example: "Electrical Engineering"
                degree_starting_year:
                  type: integer
                  example: 2024
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Successfully updated email.
        '401':
          description: Not logged in.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Not logged in.
  /user/applications:
    get:
      operationId: getUserApplications
      description: Returns info about applications made by currently logged in user.
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  campaigns:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApplicationDetails'



  /organisation:
    post:
      operationId: createOrganisation
      description: Creates a new organisation.
      tags:
        - Organisation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  example: "UNSW Software Development Society"
                admin:
                  type: integer
                  format: int64
                  example: 1541815603606036480
                  description: User ID of admin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Successfully created organisation.
        '403':
          description: User is not a super user.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Unauthorized
  /organisation/{id}:
    get:
      operationId: getOrganisationById
      parameters:
        - name: id
          in: path
          description: Organisation ID
          required: true
          schema:
            type: integer
            format: int64
      description: Returns info about specified organisation.
      tags:
        - Organisation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 6996987893965262849
                  name:
                    type: string
                    example: UNSW Software Development Society
                  logo:
                    type: string
                    example: "76718252-2a13-4de2-bc07-f977c75dc52b"
                  created_at:
                    type: string
                    example: 2024-02-10T18:25:43.511Z
    delete:
      operationId: deleteOrganisationById
      parameters:
        - name: id
          in: path
          description: Organisation ID
          required: true
          schema:
            type: integer
            format: int64
      description: Deletes specified organisation.
      tags:
        - Organisation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Successfully deleted organisation.
        '403':
          description: User is not a super user.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Unauthorized
  /organisation/{id}/campaigns:
    get:
      operationId: getOrganisationCampaignsById
      parameters:
        - name: id
          in: path
          description: Organisation ID
          required: true
          schema:
            type: integer
            format: int64
      description: Returns active campaigns for specified organisation.
      tags:
        - Organisation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  campaigns:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrganisationCampaign'
  /organisation/{id}/logo:
    patch:
      operationId: updateOrganisationLogoById
      parameters:
        - name: id
          in: path
          description: Organisation ID
          required: true
          schema:
            type: integer
            format: int64
      description: Updates logo for specified organistion.
      tags:
        - Organisation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  upload_url:
                    type: string
                    description: Presigned S3 url to upload file.
                    example: https://www.youtube.com/watch?v=dQw4w9WgXcQ
        '401':
          description: Not logged in.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Not logged in.
        '403':
          description: User is not an organisation admin.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Unauthorized

  /organisation/{id}/member:
    get:
      operationId: getOrganisationMembersById
      parameters:
        - name: id
          in: path
          description: Organisation ID
          required: true
          schema:
            type: integer
            format: int64
      description: Returns list of members of specified organisation.
      tags:
        - Organisation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  members:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          format: int64
                          example: 1541815603606036480
                        name:
                          type: string
                          example: Clancy Lion
                        role:
                          type: string
                          example: Admin
        '403':
          description: User is not an organisation admin or member.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Unauthorized
    put:
      operationId: updateOrganisationMembersById
      parameters:
        - name: id
          in: path
          description: Organisation ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                members:
                  type: array
                  uniqueItems: true
                  items:
                    type: integer
                    format: int64
                  example: [1541815603606036480, 1541815603606036827, 1541815287306036429]
      description: Specifies members for specified organistion.
      tags:
        - Organisation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Successfully updated members.
        '401':
          description: Not logged in.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Not logged in.
        '403':
          description: User is not an organisation admin.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Unauthorized
    delete:
      operationId: deleteOrganisationMemberById
      parameters:
        - name: id
          in: path
          description: Organisation ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                user_id:
                  type: integer
                  format: int64
      description: Specifies member for deletion in organistion.
      tags:
        - Organisation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Successfully updated members.
        '401':
          description: Not logged in.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Not logged in.
        '403':
          description: User is not an organisation admin.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Unauthorized

  /organisation/{id}/admin:
    get:
      operationId: getOrganisationAdminsById
      parameters:
        - name: id
          in: path
          description: Organisation ID
          required: true
          schema:
            type: integer
            format: int64
      description: Returns list of admins of specified organisation.
      tags:
        - Organisation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  members:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          format: int64
                          example: 1541815603606036480
                        name:
                          type: string
                          example: Clancy Lion
                        role:
                          type: string
                          example: Admin
        '403':
          description: User is not a SuperUser.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Unauthorized
    put:
      operationId: updateOrganisationAdminsById
      parameters:
        - name: id
          in: path
          description: Organisation ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                members:
                  type: array
                  uniqueItems: true
                  items:
                    type: integer
                    format: int64
                  example: [1541815603606036480, 1541815603606036827, 1541815287306036429]
      description: Specifies Admins for specified organistion.
      tags:
        - Organisation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Successfully updated members.
        '401':
          description: Not logged in.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Not logged in.
        '403':
          description: User is not a SuperUser.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Unauthorized
    delete:
      operationId: deleteOrganisationAdminById
      parameters:
        - name: id
          in: path
          description: Organisation ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                user_id:
                  type: integer
                  format: int64
      description: Specifies Admin for deletion in organistion.
      tags:
        - Organisation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Successfully deleted Admin.
        '401':
          description: Not logged in.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Not logged in.
        '403':
          description: User is not a SuperUser.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Unauthorized




  /organisation/{id}/campaign:
    post:
      operationId: createCampaign
      parameters:
        - name: id
          in: path
          description: Organisation ID
          required: true
          schema:
            type: integer
            format: int64
      description: Creates a new campaign inside specified organisation.
      tags:
        - Organisation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  example: 2024 Subcommittee Recruitment
                description:
                  type: string
                  example: Are you excited to make a difference?
                starts_at:
                  type: string
                  example: 2024-03-15T18:25:43.511Z
                ends_at:
                  type: string
                  example: 2024-04-15T18:25:43.511Z
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Successfully created campaign.
        '403':
          description: User is not an admin of specified organisation.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Unauthorized
  /campaign:
    get:
      operationId: getAllCampaigns
      description: Returns all active campaigns.
      tags:
        - Campaign
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  campaigns:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          format: int64
                          example: 6996987893965262849
                        organisation_id:
                          type: integer
                          format: int64
                          example: 1541815603606036827
                        organisation_name:
                          type: string
                          example: UNSW Software Development Society
                        name:
                          type: string
                          example: 2024 Subcommittee Recruitment
                        cover_image:
                          type: string
                          example: 2d19617b-46fd-4927-9f53-77d69232ba5d
                        description:
                          type: string
                          example: Are you excited to make a difference?
                        starts_at:
                          type: string
                          example: 2024-03-15T18:25:43.511Z
                        ends_at:
                          type: string
                          example: 2024-04-15T18:25:43.511Z
  /campaign/{id}:
    get:
      operationId: getCampaignById
      parameters:
        - name: id
          in: path
          description: Campaign ID
          required: true
          schema:
            type: integer
            format: int64
      description: Returns info about specified campaign.
      tags:
        - Campaign
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 6996987893965262849
                  organisation_id:
                    type: integer
                    format: int64
                    example: 1541815603606036827
                  organisation_name:
                    type: string
                    example: UNSW Software Development Society
                  name:
                    type: string
                    example: 2024 Subcommittee Recruitment
                  cover_image:
                    type: string
                    example: 2d19617b-46fd-4927-9f53-77d69232ba5d
                  description:
                    type: string
                    example: Are you excited to make a difference?
                  starts_at:
                    type: string
                    example: 2024-03-15T18:25:43.511Z
                  ends_at:
                    type: string
                    example: 2024-04-15T18:25:43.511Z
    put:
      operationId: updateCampaignById
      parameters:
        - name: id
          in: path
          description: Campaign ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  example: 2024 Subcommittee Recruitment
                description:
                  type: string
                  example: Are you excited to make a difference?
                starts_at:
                  type: string
                  example: 2024-03-15T18:25:43.511Z
                ends_at:
                  type: string
                  example: 2024-04-15T18:25:43.511Z
      description: Updates details of specified campaign.
      tags:
        - Campaign
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Successfully updated campaign.
        '401':
          description: Not logged in.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Not logged in.
        '403':
          description: User is not an organisation admin.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Unauthorized
    delete:
      operationId: deleteCampaignById
      parameters:
        - name: id
          in: path
          description: Campaign ID
          required: true
          schema:
            type: integer
            format: int64
      description: Deletes specified campaign.
      tags:
        - Campaign
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Successfully deleted campaign.
        '403':
          description: User is not an admin of campaign's organisation.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Unauthorized
  /campaign/{id}/banner:
    patch:
      operationId: updateCampaignBannerById
      parameters:
        - name: id
          in: path
          description: Campaign ID
          required: true
          schema:
            type: integer
            format: int64
      description: Updates banner image for specified campaign.
      tags:
        - Campaign
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  upload_url:
                    type: string
                    description: Presigned S3 url to upload file.
                    example: https://www.youtube.com/watch?v=dQw4w9WgXcQ
        '401':
          description: Not logged in.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Not logged in.
        '403':
          description: User is not an organisation admin.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Unauthorized

  /campaign/{id}/role:
    post:
      operationId: createRole
      parameters:
        - name: id
          in: path
          description: Campaign ID
          required: true
          schema:
            type: integer
            format: int64
      description: Creates a new role in a campaign.
      tags:
        - Campaign
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  example: Chief Mouser
                description:
                  type: string
                  required: False
                  example: Larry the cat is dead, now we need someone else to handle the rat issues at 10th Downing st.
                min_available:
                  type: int32
                  example: 1
                max_available:
                  type: int32
                  example: 3
                finalised:
                  type: boolean
                  description: Whether this role has been finalised (e.g. max avaliable number)
                  example: False
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Successfully created organisation.
        '403':
          description: User is not a Campaign Admin.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Unauthorized

  /campaign/{id}/roles:
    get:
      operationId: getRolesByCampaignId
      parameters:
        - name: id
          in: path
          description: Campaign ID
          required: true
          schema:
            type: integer
            format: int64
      description: Returns info about all roles in a campaign
      tags:
        - Campaign
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  campaigns:
                    type: array
                    items:
                      $ref: '#components/schemas/RoleDetails'

  /campaign/{id}/applications:
    get:
      operationId: getApplicationsById
      parameters:
        - name: id
          in: path
          description: campaign ID
          required: true
          schema:
            type: integer
            format: int64
      description: Returns info about all Applications in given Campaign.
      tags:
        - Campaign
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  applications:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: int64
                          example: 6996987893965262849
                        campaign_id:
                          type: int64
                          example: 6956987893465262847
                        user:
                          $ref: '#/components/schemas/UserDetails'
                        status:
                        private_status:
                        applied_roles:


  /role/{id}:
    get:
      operationId: getRoleById
      parameters:
        - name: id
          in: path
          description: Role ID
          required: true
          schema:
            type: integer
            format: int64
      description: Returns info about specified role.
      tags:
        - Role
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  name:
                    type: string
                    example: Chief Mouser
                  description:
                    type: string
                    example: Larry the cat gone missing! now we need someone else to handle the rat issues at 10th Downing st.
                  min_available:
                    type: int32
                    example: 1
                  max_available:
                    type: int32
                    example: 3
                  finalised:
                    type: boolean
                    description: Whether this role has been finalised (e.g. max avaliable number)
                    example: False
        '401':
          description: Not logged in.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Not logged in.

    put:
      operationId: updateRoleById
      parameters:
        - name: id
          in: path
          description: Role ID
          required: true
          schema:
            type: integer
            format: int64
      description: Update a role given the role id.
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  example: Chief Whip
                description:
                  type: string
                  required: False
                  example: Put a bit of stick about!
                min_available:
                  type: int32
                  example: 1
                max_available:
                  type: int32
                  example: 3
                finalised:
                  type: boolean
                  description: Whether this role has been finalised (e.g. max avaliable number)
                  example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Successfully update organisation.
        '403':
          description: User is not a Campaign Admin.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Unauthorized

    delete:
      operationId: deleteRoleById
      parameters:
        - name: id
          in: path
          description: Role ID
          required: true
          schema:
            type: integer
            format: int64
      description: Deletes specified role.
      tags:
        - Role
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Successfully deleted role.
        '403':
          description: User is not an admin of role's Campaign.
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: Unauthorized




components:
  schemas:
    ApplicationStatus:
      type: string
      enum:
        - Pending
        - Rejected
        - Successful

    OrganisationCampaign:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 6996987893965262849
        name:
          type: string
          example: 2024 Subcommittee Recruitment
        cover_image:
          type: string
          example: 2d19617b-46fd-4927-9f53-77d69232ba5d
        description:
          type: string
          example: Are you excited to make a difference?
        starts_at:
          type: string
          example: 2024-03-15T18:25:43.511Z
        ends_at:
          type: string
          example: 2024-04-15T18:25:43.511Z

    RoleDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 7036987893965262849
        campaign_id:
          type: integer
          format: int64
          example: 1116987453965262849
        name:
          type: string
          example: Chief Mouser
        description:
          type: string
          example: Larry the cat gone missing! now we need someone else to handle the rat issues at 10th Downing st.
        min_available:
          type: int32
          example: 1
        max_available:
          type: int32
          example: 3
        finalised:
          type: boolean
          description: Whether this role has been finalised (e.g. max avaliable number)
          example: False

    UserDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1541815603606036480
        email:
          type: string
          example: me@example.com
        zid:
          type: string
          example: z5555555
        name:
          type: string
          example: Clancy Lion
        pronouns:
          type: string
          example: They/Them
        gender:
          type: string
          example: Male
        degree_name:
          type: string
          example: Computer Science
        degree_starting_year:
          type: integer
          example: 2024

    ApplicationDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1541815603606036480
        campaign_id:
          type: integer
          format: int64
          example: 5141815603606036480
        user:
          $ref: '#/components/schemas/UserDetails'
        status:
          $ref: '#/components/schemas/ApplicationStatus'
        private_status:
          $ref: '#/components/schemas/ApplicationStatus'
        applied_roles:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationAppliedRoleDetails'

    ApplicationAppliedRoleDetails:
      type: object
      properties:
        campaign_role_id:
          type: integer
          format: int64
          example: 1541815603606036480
        role_name:
          type: String
          example: UI/UX subcom
